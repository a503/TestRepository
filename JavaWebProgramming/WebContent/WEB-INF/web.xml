<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	id="WebApp_ID" version="3.1">
	<!-- <display-name>JavaWebProgramming</display-name>IDE tool에서 View에 나오는 
		이름 실제 실행과는 전형 상관없다. 생략가능하다. -->
	<!-- 설정연습을 자주 할 수 없으니 자주 확인하자 -->
	
	<!-- 개발자가 주고싶은 데이터 -->
	<context-param>
		<param-name>key1</param-name>
		<param-value>value3-listener</param-value>
	</context-param>
	<!-- 리스너 생성, deploy and undeploy에서 실행 -->
	<listener>
		<listener-class>listener.ContextLoaderListener</listener-class>
	</listener>
	
	
	<!-- Filter Create, CharacterEncodingFilter 등록 및 URL 매핑-->
	<filter>
		<filter-name>EncodingFilter</filter-name>
		<filter-class>filter.CharacterEncodingFilter</filter-class>
		<!-- 요청마다 다를수 있는 encoding Type을 init-param을 통해 등록한다. -->
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>EncodingFilter</filter-name>
		<url-pattern>/*</url-pattern><!-- /* -> 모든 요청에 이 필터를 실행해라, servlet과 모든 요청 처리방식 차이가 있다. -->
	</filter-mapping>
	
	<!-- 서블릿 생성 -->
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>servlet.DispatcherServlet</servlet-class>
		<init-param><!-- 개발자가 servlet에 데이터를 주고싶을때 사용 -->
			<param-name>name1</param-name><!-- 이 이름을 가지고 값을 저장 -->
			<param-value>value1-servlet</param-value>
		</init-param>
		<init-param>
			<param-name>name2</param-name>
			<param-value>value2-servlet</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup><!-- servlet이 최초로 생성되는 곳 설정, servlet이 
			여러개일 경우 servlet의 순서를 숫자로 지정가 -->
		<!-- load-on-startup이 지정되지 않을경우 최초요청이 왔을때 servlet이 생성된다. -->
	</servlet>
	<servlet-mapping><!-- 같은 이름의 url 호출이름 등록(간단히 만들기위하여) -->
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>/</url-pattern><!-- urlpattern에 따라 servlet이면서 정적 Resource인것처럼 
			보일 수 있다. /로 등록할경우 Context만 맞을경우 어떠한 경로도 해당 servlet실행 -->
	</servlet-mapping>
	
	
</web-app>